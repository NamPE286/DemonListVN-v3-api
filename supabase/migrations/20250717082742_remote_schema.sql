drop policy "Enable read access for all users" on "public"."medals";

revoke delete on table "public"."medals" from "anon";

revoke insert on table "public"."medals" from "anon";

revoke references on table "public"."medals" from "anon";

revoke select on table "public"."medals" from "anon";

revoke trigger on table "public"."medals" from "anon";

revoke truncate on table "public"."medals" from "anon";

revoke update on table "public"."medals" from "anon";

revoke delete on table "public"."medals" from "authenticated";

revoke insert on table "public"."medals" from "authenticated";

revoke references on table "public"."medals" from "authenticated";

revoke select on table "public"."medals" from "authenticated";

revoke trigger on table "public"."medals" from "authenticated";

revoke truncate on table "public"."medals" from "authenticated";

revoke update on table "public"."medals" from "authenticated";

revoke delete on table "public"."medals" from "service_role";

revoke insert on table "public"."medals" from "service_role";

revoke references on table "public"."medals" from "service_role";

revoke select on table "public"."medals" from "service_role";

revoke trigger on table "public"."medals" from "service_role";

revoke truncate on table "public"."medals" from "service_role";

revoke update on table "public"."medals" from "service_role";

revoke delete on table "public"."playerMedals" from "anon";

revoke insert on table "public"."playerMedals" from "anon";

revoke references on table "public"."playerMedals" from "anon";

revoke select on table "public"."playerMedals" from "anon";

revoke trigger on table "public"."playerMedals" from "anon";

revoke truncate on table "public"."playerMedals" from "anon";

revoke update on table "public"."playerMedals" from "anon";

revoke delete on table "public"."playerMedals" from "authenticated";

revoke insert on table "public"."playerMedals" from "authenticated";

revoke references on table "public"."playerMedals" from "authenticated";

revoke select on table "public"."playerMedals" from "authenticated";

revoke trigger on table "public"."playerMedals" from "authenticated";

revoke truncate on table "public"."playerMedals" from "authenticated";

revoke update on table "public"."playerMedals" from "authenticated";

revoke delete on table "public"."playerMedals" from "service_role";

revoke insert on table "public"."playerMedals" from "service_role";

revoke references on table "public"."playerMedals" from "service_role";

revoke select on table "public"."playerMedals" from "service_role";

revoke trigger on table "public"."playerMedals" from "service_role";

revoke truncate on table "public"."playerMedals" from "service_role";

revoke update on table "public"."playerMedals" from "service_role";

alter table "public"."medals" drop constraint "achievement_name_key";

alter table "public"."playerMedals" drop constraint "playerMedal_medalID_fkey";

alter table "public"."playerMedals" drop constraint "playerMedal_userID_fkey";

alter table "public"."playersAchievement" drop constraint "playersAchievement_achievementid_fkey";

alter table "public"."medals" drop constraint "achievement_pkey";

alter table "public"."playerMedals" drop constraint "playerMedal_pkey";

drop index if exists "public"."achievement_name_key";

drop index if exists "public"."achievement_pkey";

drop index if exists "public"."playerMedal_pkey";

drop table "public"."medals";

drop table "public"."playerMedals";

create table "public"."inventory" (
    "userID" uuid not null,
    "medalID" bigint not null,
    "content" text,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."inventory" enable row level security;

create table "public"."items" (
    "id" bigint generated by default as identity not null,
    "name" character varying not null default 'defaultname'::character varying,
    "redirect" text,
    "type" text not null default 'medal'::text
);


alter table "public"."items" enable row level security;

CREATE UNIQUE INDEX achievement_name_key ON public.items USING btree (name);

CREATE UNIQUE INDEX achievement_pkey ON public.items USING btree (id);

CREATE UNIQUE INDEX "playerMedal_pkey" ON public.inventory USING btree ("userID", "medalID");

alter table "public"."inventory" add constraint "playerMedal_pkey" PRIMARY KEY using index "playerMedal_pkey";

alter table "public"."items" add constraint "achievement_pkey" PRIMARY KEY using index "achievement_pkey";

alter table "public"."inventory" add constraint "playerMedal_medalID_fkey" FOREIGN KEY ("medalID") REFERENCES items(id) not valid;

alter table "public"."inventory" validate constraint "playerMedal_medalID_fkey";

alter table "public"."inventory" add constraint "playerMedal_userID_fkey" FOREIGN KEY ("userID") REFERENCES players(uid) not valid;

alter table "public"."inventory" validate constraint "playerMedal_userID_fkey";

alter table "public"."items" add constraint "achievement_name_key" UNIQUE using index "achievement_name_key";

alter table "public"."playersAchievement" add constraint "playersAchievement_achievementid_fkey" FOREIGN KEY (achievementid) REFERENCES items(id) not valid;

alter table "public"."playersAchievement" validate constraint "playersAchievement_achievementid_fkey";

grant delete on table "public"."inventory" to "anon";

grant insert on table "public"."inventory" to "anon";

grant references on table "public"."inventory" to "anon";

grant select on table "public"."inventory" to "anon";

grant trigger on table "public"."inventory" to "anon";

grant truncate on table "public"."inventory" to "anon";

grant update on table "public"."inventory" to "anon";

grant delete on table "public"."inventory" to "authenticated";

grant insert on table "public"."inventory" to "authenticated";

grant references on table "public"."inventory" to "authenticated";

grant select on table "public"."inventory" to "authenticated";

grant trigger on table "public"."inventory" to "authenticated";

grant truncate on table "public"."inventory" to "authenticated";

grant update on table "public"."inventory" to "authenticated";

grant delete on table "public"."inventory" to "service_role";

grant insert on table "public"."inventory" to "service_role";

grant references on table "public"."inventory" to "service_role";

grant select on table "public"."inventory" to "service_role";

grant trigger on table "public"."inventory" to "service_role";

grant truncate on table "public"."inventory" to "service_role";

grant update on table "public"."inventory" to "service_role";

grant delete on table "public"."items" to "anon";

grant insert on table "public"."items" to "anon";

grant references on table "public"."items" to "anon";

grant select on table "public"."items" to "anon";

grant trigger on table "public"."items" to "anon";

grant truncate on table "public"."items" to "anon";

grant update on table "public"."items" to "anon";

grant delete on table "public"."items" to "authenticated";

grant insert on table "public"."items" to "authenticated";

grant references on table "public"."items" to "authenticated";

grant select on table "public"."items" to "authenticated";

grant trigger on table "public"."items" to "authenticated";

grant truncate on table "public"."items" to "authenticated";

grant update on table "public"."items" to "authenticated";

grant delete on table "public"."items" to "service_role";

grant insert on table "public"."items" to "service_role";

grant references on table "public"."items" to "service_role";

grant select on table "public"."items" to "service_role";

grant trigger on table "public"."items" to "service_role";

grant truncate on table "public"."items" to "service_role";

grant update on table "public"."items" to "service_role";

create policy "Enable read access for all users"
on "public"."items"
as permissive
for select
to public
using (true);



